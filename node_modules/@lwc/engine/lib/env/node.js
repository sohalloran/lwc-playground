"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const language_1 = require("../shared/language");
const { DOCUMENT_POSITION_CONTAINED_BY, DOCUMENT_POSITION_CONTAINS, DOCUMENT_POSITION_PRECEDING, DOCUMENT_POSITION_FOLLOWING, DOCUMENT_FRAGMENT_NODE, } = Node;
exports.DOCUMENT_POSITION_CONTAINED_BY = DOCUMENT_POSITION_CONTAINED_BY;
exports.DOCUMENT_POSITION_CONTAINS = DOCUMENT_POSITION_CONTAINS;
exports.DOCUMENT_POSITION_PRECEDING = DOCUMENT_POSITION_PRECEDING;
exports.DOCUMENT_POSITION_FOLLOWING = DOCUMENT_POSITION_FOLLOWING;
exports.DOCUMENT_FRAGMENT_NODE = DOCUMENT_FRAGMENT_NODE;
const { insertBefore, removeChild, appendChild, hasChildNodes, replaceChild, compareDocumentPosition, cloneNode, } = Node.prototype;
exports.insertBefore = insertBefore;
exports.removeChild = removeChild;
exports.appendChild = appendChild;
exports.hasChildNodes = hasChildNodes;
exports.replaceChild = replaceChild;
exports.compareDocumentPosition = compareDocumentPosition;
exports.cloneNode = cloneNode;
const parentNodeGetter = language_1.getOwnPropertyDescriptor(Node.prototype, 'parentNode').get;
exports.parentNodeGetter = parentNodeGetter;
const parentElementGetter = language_1.hasOwnProperty.call(Node.prototype, 'parentElement') ?
    language_1.getOwnPropertyDescriptor(Node.prototype, 'parentElement').get :
    language_1.getOwnPropertyDescriptor(HTMLElement.prototype, 'parentElement').get; // IE11
exports.parentElementGetter = parentElementGetter;
const textContextSetter = language_1.getOwnPropertyDescriptor(Node.prototype, 'textContent').set;
exports.textContextSetter = textContextSetter;
const childNodesGetter = language_1.hasOwnProperty.call(Node.prototype, 'childNodes') ?
    language_1.getOwnPropertyDescriptor(Node.prototype, 'childNodes').get :
    language_1.getOwnPropertyDescriptor(HTMLElement.prototype, 'childNodes').get; // IE11
exports.childNodesGetter = childNodesGetter;
const nodeValueDescriptor = language_1.getOwnPropertyDescriptor(Node.prototype, 'nodeValue');
const nodeValueSetter = nodeValueDescriptor.set;
exports.nodeValueSetter = nodeValueSetter;
const nodeValueGetter = nodeValueDescriptor.get;
exports.nodeValueGetter = nodeValueGetter;
//# sourceMappingURL=node.js.map