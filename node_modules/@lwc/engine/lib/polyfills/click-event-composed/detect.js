"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const composedDescriptor = Object.getOwnPropertyDescriptor(Event.prototype, 'composed');
function detect() {
    if (!composedDescriptor) {
        // No need to apply this polyfill if this client completely lacks
        // support for the composed property.
        return false;
    }
    // Assigning a throwaway click event here to suppress a ts error when we
    // pass clickEvent into the composed getter below. The error is:
    // [ts] Variable 'clickEvent' is used before being assigned.
    let clickEvent = new Event('click');
    const button = document.createElement('button');
    button.addEventListener('click', event => clickEvent = event);
    button.click();
    return !composedDescriptor.get.call(clickEvent);
}
exports.default = detect;
//# sourceMappingURL=detect.js.map