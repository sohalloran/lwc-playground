"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GlobalMeasurementPhase;
(function (GlobalMeasurementPhase) {
    GlobalMeasurementPhase["REHYDRATE"] = "lwc-rehydrate";
    GlobalMeasurementPhase["INIT"] = "lwc-init";
    GlobalMeasurementPhase["HYDRATE"] = "lwc-hydrate";
})(GlobalMeasurementPhase = exports.GlobalMeasurementPhase || (exports.GlobalMeasurementPhase = {}));
// Even if all the browser the engine supports implements the UserTiming API, we need to guard the measure APIs.
// JSDom (used in Jest) for example doesn't implement the UserTiming APIs
const isUserTimingSupported = typeof performance !== 'undefined' &&
    typeof performance.mark === 'function' &&
    typeof performance.clearMarks === 'function' &&
    typeof performance.measure === 'function' &&
    typeof performance.clearMeasures === 'function';
function getMarkName(vm, phase) {
    return `<${vm.def.name} (${vm.uid})> - ${phase}`;
}
function startMeasure(vm, phase) {
    if (!isUserTimingSupported) {
        return;
    }
    const name = getMarkName(vm, phase);
    performance.mark(name);
}
exports.startMeasure = startMeasure;
function endMeasure(vm, phase) {
    if (!isUserTimingSupported) {
        return;
    }
    const name = getMarkName(vm, phase);
    performance.measure(name, name);
    // Clear the created marks and measure to avoid filling the performance entries buffer.
    // Note: Even if the entries get deleted, existing PerformanceObservers preserve a copy of those entries.
    performance.clearMarks(name);
    performance.clearMeasures(name);
}
exports.endMeasure = endMeasure;
// tslint:disable-next-line:no-empty
const noop = function () { };
function _startGlobalMeasure(phase) {
    performance.mark(phase);
}
function _endGlobalMeasure(phase) {
    performance.measure(phase, phase);
    performance.clearMarks(phase);
    performance.clearMeasures(phase);
}
exports.startGlobalMeasure = isUserTimingSupported ? _startGlobalMeasure : noop;
exports.endGlobalMeasure = isUserTimingSupported ? _endGlobalMeasure : noop;
//# sourceMappingURL=performance-timing.js.map