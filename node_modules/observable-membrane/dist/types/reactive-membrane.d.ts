export declare type ReactiveMembraneShadowTarget = object | any[];
export declare type ReactiveMembraneAccessCallback = (obj: any, key: PropertyKey) => void;
export declare type ReactiveMembraneMutationCallback = (obj: any, key: PropertyKey) => void;
export declare type ReactiveMembraneDistortionCallback = (value: any) => any;
export interface ObservableMembraneInit {
    valueMutated?: ReactiveMembraneMutationCallback;
    valueObserved?: ReactiveMembraneAccessCallback;
    valueDistortion?: ReactiveMembraneDistortionCallback;
}
export declare class ReactiveMembrane {
    private valueDistortion?;
    private valueMutated?;
    private valueObserved?;
    private objectGraph;
    constructor(options?: ObservableMembraneInit);
    getProxy(value: any): any;
    getReadOnlyProxy(value: any): any;
    unwrapProxy(p: any): any;
    private getReactiveState(value);
}
